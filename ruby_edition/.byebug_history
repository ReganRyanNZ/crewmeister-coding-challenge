c
cal.events.last.description
cal.events.last.summary
cal.events.first.dtstart.to_s
cal.events.first.dtstart
Date.parse("20170113")
Date.parse("20170113") == cal.events.first.dtstart
Date.parse("20170113")
Date.new("20170113")
Date.new("2017-01-13")
Date.new
cal.events.first.dtstart
cal.events.first.methods
cal.events.first.description
cal.events.first.summary
cal.events.first
cal.events.last
cal.events.last.events.count
cal.events.last.class
cal.events.last.count
cal.events.last
cal.events.count
cal.events
cal.events.first
c
cal.events.count
cal.events
cal.methods
cal
c
cal.class
cal
c
"2017-01-13".gsub("-", "")
c
Icalendar
c
"".methods
"".present?
"".empty?
@absences.map{|ab| ab[:member_note]}
nil.empty?
"".empty?
"".nil?
nil.nil?
nil.methods
"".blank?
nil.blank?
nil.empty?
nil.present?
"".present?
@absences.map{|ab|ab[:type]}
absence
absence.keys
pp absence
"Absence: #{member[:name]}"
member = @members.find{|member| member[:user_id] == absence[:user_id]}
@members.find{|member| member[:user_id] == absence[:user_id]}
@members.select{|member| member[:user_id] == absence[:user_id]}
absence = @absences.sample
@members.select{|member| member[:user_id] == absence[:user_id]}
@members.sample
@absences.sample
@absences.map{|ab|ab[:member_note]}
@absences.pluck(:member_note)
@absences.count
@absences.sort_by{|ab| ab[:member_note]}.first
@absences.sort_by{|ab| ab[:admittor_note]}.first
@absences.sort_by{|ab| ab[:admittor_note]}.last
@absences.sample
@absences.first[:end_date]
@absences.first[:start_date]
@absences.first.start_date
@absences.first
      @members = CmChallenge::Api.members
@absences = CmChallenge::Api.absences
      @members = cmChallenge::Api.members
@absences = cmChallenge::Api.absences
CmChallenge::Api.members
CmChallenge::Api.absences
CmChallenge::Api
